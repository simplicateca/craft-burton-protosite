{%- extends "_burton/partial" -%}

{## Dynamic Extends & Ajax Requests
{---------------------------------------------------------------------------------------}
    If we detect that the current request is an AJAX/htmx request, we can limit the HTML
    skeleton to consist of just {% block page__ajax %}.

    This allows individual entries to decide the content to render for AJAX requests.

    Useful for dynamically loading an entry in a modal with JavaScript, since it prevents
    common site elements (header, footer, nav, etc.) from being re-rendered.
{-------------------------------------------------------------------------------------##}

{%- block output -%}

    {%- set entry = entry ?? null -%}

    {## Eager-Loading
    {---------------------------------------------------------------------------------------}
     -> https://craftcms.com/docs/5.x/development/eager-loading.html
    {-------------------------------------------------------------------------------------##}
    {# {%- set _eagerMatrix = _eagerMatrix ??? [
        "text.text",
        "image:collections", "image:images",
        "media:collections", "media:media",
        "deck:collections",  "deck:entries",
        "bits:collections",  "bits:bits",
        "fragment:fragments"
    ] -%}

    {%- set _eager = _eager ??? [
        "taxonomies", "headerBuilder", "bodyBuilder", "sidebarBuilder",
        ..._eagerMatrix | map( p => "headerBuilder.#{p}"),
        ..._eagerMatrix | map( p => "bodyBuilder.#{p}"),
        ..._eagerMatrix | map( p => "sidebarBuilder.#{p}"),
    ] -%}

    {% if _eager and entry.id ?? null %}
        {% do craft.app.elements.eagerLoadElements( className(entry), [entry], _eager ) -%}
    {% endif %} #}

    {{- craft.app.request.isAjax() and not craft.app.request.getIsPreview()
        ? block('ajax')
        : block('regular')
    -}}
{%- endblock -%}

{%- block html__class '' -%}
{%- block body__class '' -%}
{%- block body__id    '' -%}

{%- block regular -%}
    <!doctype html>
    {{ tag( 'html', {
        prefix: "og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#",
        lang  : craft.app.language|slice(0,2),
        class : block('html__class'),
        html  : block('html')
    }) -}}
{%- endblock -%}

{%- block ajax -%}
    {{- block('main') -}}
{%- endblock -%}

{%- block html -%}
    {{- tag('head', { html: block('head') }) -}}
    {{- tag('body', {
        class: block('body__class'),
        id   : block('body__id'),
        html : block('body')
    } ) -}}
{%- endblock -%}


{%- block head -%}
    {%- block head__meta -%}
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,minimum-scale=1">
        <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,viewport-fit=cover">
        <meta name="format-detection" content="telephone=no">
    {%- endblock -%}

    {% block head__fonts '' %}
    {% block head__css   '' %}
    {% block head__js    '' %}

    {{- head() -}} {# https://craftcms.com/docs/5.x/reference/twig/functions.html#head #}
{%- endblock -%}


{%- block body -%}
    {## https://craftcms.com/docs/5.x/reference/twig/functions.html#beginbody ##}
    {{- beginBody() -}}

    {%- block page -%}
        {%- block topline -%}{%- endblock -%}
        {%- block main tag( 'main', { html: block('content') }) -%}
        {%- block bottomline -%}{%- endblock -%}
    {%- endblock -%}

    {## https://craftcms.com/docs/5.x/reference/twig/functions.html#endbody ##}
    {{- endBody() -}}
{%- endblock -%}


{%- block content -%}
    {%- import "_burton" as b -%}
    {{- b.builder( entry, 'body' ) -}}
{%- endblock -%}

{%- block aside -%}{%- endblock -%}


{## Prefetch & Preconnect Macro
{---------------------------------------------------------------------------------------}
    Adds meta <link> tags and HTTP headers for DNS prefetching and preconnecting.
    Original Source: [nystudios107 Craft Starter](https://github.com/nystudio107/craft)

    How to Use:
{---------------------------------------------------------------------------------------}
    {%- from "_base/_template" import prefetch -%}
    {{- prefetch([
        'https://unpkg.com',
        'https://fonts.googleapis.com',
        'https://fonts.gstatic.com',
    ]) -}}
{-------------------------------------------------------------------------------------##}
{%- macro prefetch(urls) -%}
    {%- set headerLink = "Link: " -%}
    {% for url in urls %}
        {%- set headerLink = headerLink ~ "<#{url}>; rel=dns-prefetch;," -%}
        {%- set headerLink = headerLink ~ "<#{url}>; rel=preconnect; crossorigin;" -%}
        {% if not loop.last %}
            {%- set headerLink = headerLink ~ "," -%}
        {% endif %}
        <link rel="dns-prefetch" href="{{ url }}">
        <link rel="preconnect" href="{{ url }}" crossorigin>
    {% endfor %}
    {% header headerLink %}
{%- endmacro -%}


{## HTTP Cookie Get & Set Macros
{---------------------------------------------------------------------------------------}
    Macros for getting and setting cookies natively with Craft CMS 3.1.17 or later.
    Original Source: [nystudios107 Craft Starter](https://github.com/nystudio107/craft)

    How to Use:
{---------------------------------------------------------------------------------------}
    {%- import "burton/html" as cookies -%}
    {%- set woof = cookies.get('woof') -%}
    {%- do cookies.set('woof', 'bark', now | date_modify('+1 hour').timestamp) -%}
{-------------------------------------------------------------------------------------##}
{%- macro get(name, cookieJar = null) -%}
{%- apply spaceless %}
    {%- set cookieJar = cookieJar ?? craft.app.request.cookies %}
    {%- set cookie = cookieJar.get(name) -%}
    {{ cookie.value ?? '' }}
{% endapply %}{%- endmacro -%}

{%- macro set(name, value = '', expires = 0, path = '/', domain = '', secure = false, httpOnly = false, cookieJar = null) -%}
{%- apply spaceless %}
    {%- set cookieJar = cookieJar ?? craft.app.response.cookies %}
    {%- set domain = domain | length ?: craft.app.config.general.defaultCookieDomain %}
    {%- set cookie = create({
        'class': 'yii\\web\\Cookie',
        'name': name,
        'value': value,
        'path': path,
        'domain': domain,
        'secure': secure,
        'httpOnly': httpOnly,
        'expire': expires
    }) -%}
    {% do cookieJar.add(cookie) -%}
{% endapply %}{%- endmacro -%}


{## To serve fonts locally, download fonts using: https://gwfh.mranftl.com/fonts,
    upload to server (or CDN), edit and uncomment the lines below:
{## ----------------------------------------------------------------------------- ##}
{%- macro fontface( family, filename, weight ) -%}
    {% css alias( "@fonts/#{filename}.woff2" ) with { rel: "preload", as: "font", type: "font/woff2", crossorigin:"anonymous" } %}

    @font-face {
        font-family: '{{family}}';
        src: url('{{ alias( '@fonts' ) }}/{{filename}}.woff2') format('woff2'),
             url('{{ alias( '@fonts' ) }}/{{filename}}.woff') format('woff');
        font-weight: {{weight}};
        font-style: normal;
        font-display: swap;
    }
{%- endmacro -%}